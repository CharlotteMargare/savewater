/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SaveWater, SaveWaterInterface } from "../../contracts/SaveWater";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClearOptional",
        type: "uint256",
      },
    ],
    name: "WaterSaved",
    type: "event",
  },
  {
    inputs: [],
    name: "getTopUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "topUsers",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "counts",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getUserRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "descriptionId",
        type: "uint32",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "streak",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserRecordsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStreak",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTotalAmount",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "grantAccessForRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "grantAccessForTotal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "threshold",
        type: "uint64",
      },
    ],
    name: "hasReachedAmountThreshold",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "descriptionId",
        type: "uint32",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "revealAmount",
        type: "bool",
      },
    ],
    name: "recordSave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b611395806101975f395ff3fe608060405234801561000f575f5ffd5b50600436106100cf575f3560e01c8063be92f8111161007d578063da1f12ab11610058578063da1f12ab14610225578063f39dfb171461022d578063f5afead514610243575f5ffd5b8063be92f811146101bc578063c57f2dfd146101e4578063d94c3ced14610212575f5ffd5b8063483444f9116100ad578063483444f9146101665780635c586f7e146101a15780638930846e146101b4575f5ffd5b806303e8837c146100d35780630fa77f441461011b578063182b1b7414610151575b5f5ffd5b6101016100e1366004611066565b6001600160a01b03165f9081526001602052604090205463ffffffff1690565b60405163ffffffff90911681526020015b60405180910390f35b610143610129366004611066565b6001600160a01b03165f9081526020819052604090205490565b604051908152602001610112565b61016461015f36600461107f565b610256565b005b6101796101743660046110a9565b610307565b6040805194855263ffffffff9384166020860152840191909152166060820152608001610112565b6101646101af366004611066565b610379565b600354610143565b6101436101ca366004611066565b6001600160a01b03165f9081526002602052604090205490565b6101016101f2366004611066565b6001600160a01b03165f9081526005602052604090205463ffffffff1690565b6101436102203660046110d1565b6103af565b612711610143565b6102356103e2565b604051610112929190611112565b6101646102513660046111b0565b610815565b335f9081526020819052604090205482106102b75760405162461bcd60e51b815260206004820152600960248201527f62616420696e6465780000000000000000000000000000000000000000000000604482015260640160405180910390fd5b335f9081526020819052604081208054849081106102d7576102d7611252565b905f5260205f20906004020190506102f28160020154610b95565b50610301816002015483610ba4565b50505050565b5f5f5f5f5f5f5f886001600160a01b03166001600160a01b031681526020019081526020015f20868154811061033f5761033f611252565b5f9182526020909120600490910201805460018201546002830154600390930154919a63ffffffff9182169a509298501695509350505050565b335f9081526002602052604090205461039190610b95565b50335f908152600260205260409020546103ab9082610ba4565b5050565b6001600160a01b0382165f908152600260205260408120546103d9906103d484610bb6565b610bcc565b90505b92915050565b60065460609081905f81900361040f575050604080515f8082526020820190815281830190925292909150565b5f8167ffffffffffffffff81111561042957610429611266565b604051908082528060200260200182016040528015610452578160200160208202803683370190505b5090505f8267ffffffffffffffff81111561046f5761046f611266565b604051908082528060200260200182016040528015610498578160200160208202803683370190505b5090505f5b8381101561054f575f600682815481106104b9576104b9611252565b905f5260205f20015f9054906101000a90046001600160a01b03169050808483815181106104e9576104e9611252565b6001600160a01b039283166020918202929092018101919091529082165f90815260019091526040902054835163ffffffff9091169084908490811061053157610531611252565b63ffffffff909216602092830291909101909101525060010161049d565b505f600a841061056057600a610562565b835b90505f5b818110156106db57805f61057b82600161128e565b90505b868110156105d85784828151811061059857610598611252565b602002602001015163ffffffff168582815181106105b8576105b8611252565b602002602001015163ffffffff1611156105d0578091505b60010161057e565b508181146106d2578381815181106105f2576105f2611252565b602002602001015184838151811061060c5761060c611252565b602002602001015185848151811061062657610626611252565b6020026020010186848151811061063f5761063f611252565b63ffffffff938416602091820292909201015291169052845185908290811061066a5761066a611252565b602002602001015185838151811061068457610684611252565b602002602001015186848151811061069e5761069e611252565b602002602001018784815181106106b7576106b7611252565b6001600160a01b039384166020918202929092010152911690525b50600101610566565b505f8167ffffffffffffffff8111156106f6576106f6611266565b60405190808252806020026020018201604052801561071f578160200160208202803683370190505b5090505f8267ffffffffffffffff81111561073c5761073c611266565b604051908082528060200260200182016040528015610765578160200160208202803683370190505b5090505f5b838110156108075785818151811061078457610784611252565b602002602001015183828151811061079e5761079e611252565b60200260200101906001600160a01b031690816001600160a01b0316815250508481815181106107d0576107d0611252565b60200260200101518282815181106107ea576107ea611252565b63ffffffff9092166020928302919091019091015260010161076a565b509097909650945050505050565b5f6108558585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610bfa92505050565b905061086081610b95565b505f61086f62015180426112a1565b335f90815260056020908152604080832054600490925282205492935063ffffffff9081169216908190036108a757600191506108e8565b8063ffffffff168363ffffffff1603156108e8576108c68160016112c0565b63ffffffff168363ffffffff16036108e3576001820191506108e8565b600191505b8260045f336001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548163ffffffff021916908363ffffffff1602179055508160055f336001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548163ffffffff021916908363ffffffff1602179055505f5f336001600160a01b03166001600160a01b031681526020019081526020015f2060405180608001604052804281526020018b63ffffffff1681526020018681526020018463ffffffff16815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015f6101000a81548163ffffffff021916908363ffffffff160217905550604082015181600201556060820151816003015f6101000a81548163ffffffff021916908363ffffffff1602179055505050610a498433610ba4565b50335f90815260026020526040902054610a639085610c07565b335f908152600260205260409020819055610a7d90610b95565b50335f81815260026020526040902054610a9691610ba4565b50600380546001908101909155335f90815260208281526040808320805463ffffffff19811663ffffffff918216909601169490941790935560079052205460ff16610b5057335f818152600760205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b604080514281525f602082015233917f9dabee377975e22cd32d9a9924e533aac3ee4273278b2b870b4ed76aa91ae8e0910160405180910390a2505050505050505050565b5f610ba08230610c35565b5090565b5f610baf8383610c35565b5090919050565b5f6103dc8267ffffffffffffffff166005610cbe565b5f82610bde57610bdb5f610bb6565b92505b81610bef57610bec5f610bb6565b91505b6103d983835f610d7b565b5f6103d983836005610e76565b5f82610c1957610c165f610bb6565b92505b81610c2a57610c275f610bb6565b91505b6103d983835f610f96565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610ca3575f5ffd5b505af1158015610cb5573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90610d3390879087906004016112fc565b6020604051808303815f875af1158015610d4f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d739190611317565b949350505050565b5f5f8215610d8e5750600160f81b610d91565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051631391547f60e01b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b031690631391547f906064015b6020604051808303815f875af1158015610e48573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6c9190611317565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610eef90889033908990899060040161132e565b6020604051808303815f875af1158015610f0b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f2f9190611317565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610f78575f5ffd5b505af1158015610f8a573d5f5f3e3d5ffd5b50505050509392505050565b5f5f8215610fa95750600160f81b610fac565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f3890606401610e2c565b80356001600160a01b0381168114611061575f5ffd5b919050565b5f60208284031215611076575f5ffd5b6103d98261104b565b5f5f60408385031215611090575f5ffd5b823591506110a06020840161104b565b90509250929050565b5f5f604083850312156110ba575f5ffd5b6110c38361104b565b946020939093013593505050565b5f5f604083850312156110e2575f5ffd5b6110eb8361104b565b9150602083013567ffffffffffffffff81168114611107575f5ffd5b809150509250929050565b604080825283519082018190525f9060208501906060840190835b818110156111545783516001600160a01b031683526020938401939092019160010161112d565b5050838103602080860191909152855180835291810192508501905f5b8181101561119557825163ffffffff16845260209384019390920191600101611171565b50919695505050505050565b80358015158114611061575f5ffd5b5f5f5f5f5f608086880312156111c4575f5ffd5b853563ffffffff811681146111d7575f5ffd5b945060208601359350604086013567ffffffffffffffff8111156111f9575f5ffd5b8601601f81018813611209575f5ffd5b803567ffffffffffffffff81111561121f575f5ffd5b886020828401011115611230575f5ffd5b60209190910193509150611246606087016111a1565b90509295509295909350565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156103dc576103dc61127a565b5f826112bb57634e487b7160e01b5f52601260045260245ffd5b500490565b63ffffffff81811683821601908111156103dc576103dc61127a565b605481106112f857634e487b7160e01b5f52602160045260245ffd5b9052565b8281526040810161131060208301846112dc565b9392505050565b5f60208284031215611327575f5ffd5b5051919050565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f83011684010191505061137f60608301846112dc565b9594505050505056fea164736f6c634300081b000a";

type SaveWaterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaveWaterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaveWater__factory extends ContractFactory {
  constructor(...args: SaveWaterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SaveWater & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SaveWater__factory {
    return super.connect(runner) as SaveWater__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaveWaterInterface {
    return new Interface(_abi) as SaveWaterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SaveWater {
    return new Contract(address, _abi, runner) as unknown as SaveWater;
  }
}
