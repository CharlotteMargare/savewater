/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SaveWaterBadge,
  SaveWaterBadgeInterface,
} from "../../../contracts/SaveWaterBadge.sol/SaveWaterBadge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "saveWaterAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "BadgeMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "levelBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "mintBadge",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saveWater",
    outputs: [
      {
        internalType: "contract ISaveWater",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setLevelBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "value",
        type: "uint32",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "thresholds",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051611cb5380380611cb583398101604081905261002e91610206565b336040518060400160405280600f81526020016e53617665576174657220426164676560881b8152506040518060400160405280600381526020016229aba160e91b815250815f908161008191906102cb565b50600161008e82826102cb565b5050506001600160a01b0381166100bf57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c8816101b5565b506001600160a01b0381166101135760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21029b0bb32abb0ba32b960791b60448201526064016100b6565b6001600160a01b0316608052600760208190527fb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b828805463ffffffff1990811690921790557fb7c774451310d1be4108bc180d1b52823cb0ee0274a6c0081bcaf94f115fb96d80548216601e17905560035f527f3be6fd20d5acfde5b873b48692cd31f4d3c7e8ee8a813af4696af8859e5ca6c680549091166064179055610385565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208284031215610216575f5ffd5b81516001600160a01b038116811461022c575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061025b57607f821691505b60208210810361027957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102c657805f5260205f20601f840160051c810160208510156102a45750805b601f840160051c820191505b818110156102c3575f81556001016102b0565b50505b505050565b81516001600160401b038111156102e4576102e4610233565b6102f8816102f28454610247565b8461027f565b6020601f82116001811461032a575f83156103135750848201515b5f19600385901b1c1916600184901b1784556102c3565b5f84815260208120601f198516915b828110156103595787850151825560209485019460019092019101610339565b508482101561037657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6080516119116103a45f395f81816102f9015261067701526119115ff3fe608060405234801561000f575f5ffd5b5060043610610184575f3560e01c8063715018a6116100dd578063a22cb46511610088578063e6c4d5d311610063578063e6c4d5d314610380578063e985e9c514610393578063f2fde38b146103ce575f5ffd5b8063a22cb46514610347578063b88d4fde1461035a578063c87b56dd1461036d575f5ffd5b806387062dda116100b857806387062dda1461031b5780638da5cb5b1461032e57806395d89b411461033f575f5ffd5b8063715018a6146102bf5780637453bc86146102c757806380c0f7ab146102f4575f5ffd5b806342842e0e1161013d5780635c19ec26116101185780635c19ec26146102865780636352211e1461029957806370a08231146102ac575f5ffd5b806342842e0e14610218578063478c0ae61461022b5780635a50d2f41461024c575f5ffd5b8063081812fc1161016d578063081812fc146101c5578063095ea7b3146101f057806323b872dd14610205575f5ffd5b806301ffc9a71461018857806306fdde03146101b0575b5f5ffd5b61019b61019636600461136f565b6103e1565b60405190151581526020015b60405180910390f35b6101b8610432565b6040516101a791906113bf565b6101d86101d33660046113d1565b6104c1565b6040516001600160a01b0390911681526020016101a7565b6102036101fe366004611403565b6104e8565b005b61020361021336600461142b565b6104f7565b61020361022636600461142b565b610585565b61023e610239366004611475565b6105a4565b6040519081526020016101a7565b61027161025a366004611475565b60076020525f908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101a7565b61020361029436600461149f565b6107e1565b6101d86102a73660046113d1565b610865565b61023e6102ba3660046114d4565b61086f565b6102036108b4565b61019b6102d53660046114ed565b600960209081525f928352604080842090915290825290205460ff1681565b6101d87f000000000000000000000000000000000000000000000000000000000000000081565b6101b8610329366004611475565b6108c7565b6006546001600160a01b03166101d8565b6101b861095e565b61020361035536600461151e565b61096d565b610203610368366004611560565b610978565b6101b861037b3660046113d1565b610990565b61020361038e36600461163d565b610aef565b61019b6103a13660046116bb565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6102036103dc3660046114d4565b610b63565b5f6001600160e01b031982166380ac58cd60e01b148061041157506001600160e01b03198216635b5e139f60e01b145b8061042c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f8054610440906116e3565b80601f016020809104026020016040519081016040528092919081815260200182805461046c906116e3565b80156104b75780601f1061048e576101008083540402835291602001916104b7565b820191905f5260205f20905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b5f6104cb82610ba0565b505f828152600460205260409020546001600160a01b031661042c565b6104f3828233610bd8565b5050565b6001600160a01b03821661052557604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f610531838333610be5565b9050836001600160a01b0316816001600160a01b03161461057f576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161051c565b50505050565b61059f83838360405180602001604052805f815250610978565b505050565b5f60018260ff16101580156105bd575060038260ff1611155b6105f55760405162461bcd60e51b8152602060048201526009602482015268189859081b195d995b60ba1b604482015260640161051c565b335f90815260096020908152604080832060ff808716855292529091205416156106615760405162461bcd60e51b815260206004820152600e60248201527f616c7265616479206d696e746564000000000000000000000000000000000000604482015260640161051c565b60405162fa20df60e21b81523360048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906303e8837c90602401602060405180830381865afa1580156106c4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e8919061171b565b60ff84165f9081526007602052604090205490915063ffffffff90811690821610156107565760405162461bcd60e51b815260206004820152601060248201527f6e6f7420656e6f75676820636f756e7400000000000000000000000000000000604482015260640161051c565b600a5f81546107649061174a565b9182905550335f81815260096020908152604080832060ff891684529091529020805460ff1916600117905590925061079d9083610ce4565b6040805160ff851681526020810184905233917f0dbdb7726a1704da165dee8b96cec65a9919e80ca5b8403954b77af3eaa7b26c910160405180910390a250919050565b6107e9610cfd565b60018260ff1610158015610801575060038260ff1611155b6108395760405162461bcd60e51b8152602060048201526009602482015268189859081b195d995b60ba1b604482015260640161051c565b60ff919091165f908152600760205260409020805463ffffffff191663ffffffff909216919091179055565b5f61042c82610ba0565b5f6001600160a01b038216610899576040516322718ad960e21b81525f600482015260240161051c565b506001600160a01b03165f9081526003602052604090205490565b6108bc610cfd565b6108c55f610d2a565b565b60086020525f9081526040902080546108df906116e3565b80601f016020809104026020016040519081016040528092919081815260200182805461090b906116e3565b80156109565780601f1061092d57610100808354040283529160200191610956565b820191905f5260205f20905b81548152906001019060200180831161093957829003601f168201915b505050505081565b606060018054610440906116e3565b6104f3338383610d88565b6109838484846104f7565b61057f3385858585610e26565b606061099b82610ba0565b505f828152600260205260409020546001600160a01b031660015b60038160ff1611610ad9576001600160a01b0382165f90815260096020908152604080832060ff80861685529252909120541615610ac75760ff81165f9081526008602052604081208054610a0a906116e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906116e3565b8015610a815780601f10610a5857610100808354040283529160200191610a81565b820191905f5260205f20905b815481529060010190602001808311610a6457829003601f168201915b505050505090505f81511115610ac55780610a9b86610f4e565b604051602001610aac929190611779565b6040516020818303038152906040529350505050919050565b505b80610ad18161178d565b9150506109b6565b505060408051602081019091525f815292915050565b610af7610cfd565b60018360ff1610158015610b0f575060038360ff1611155b610b475760405162461bcd60e51b8152602060048201526009602482015268189859081b195d995b60ba1b604482015260640161051c565b60ff83165f90815260086020526040902061057f8284836117ef565b610b6b610cfd565b6001600160a01b038116610b9457604051631e4fbdf760e01b81525f600482015260240161051c565b610b9d81610d2a565b50565b5f818152600260205260408120546001600160a01b03168061042c57604051637e27328960e01b81526004810184905260240161051c565b61059f8383836001610feb565b5f828152600260205260408120546001600160a01b0390811690831615610c1157610c1181848661111a565b6001600160a01b03811615610c4b57610c2c5f855f5f610feb565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610c79576001600160a01b0385165f908152600360205260409020805460010190555b5f84815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6104f3828260405180602001604052805f81525061117e565b6006546001600160a01b031633146108c55760405163118cdaa760e01b815233600482015260240161051c565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610dba57604051630b61174360e31b81526001600160a01b038316600482015260240161051c565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610f4757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610e689088908890879087906004016118a9565b6020604051808303815f875af1925050508015610ea2575060408051601f3d908101601f19168201909252610e9f918101906118e9565b60015b610f09573d808015610ecf576040519150601f19603f3d011682016040523d82523d5f602084013e610ed4565b606091505b5080515f03610f0157604051633250574960e11b81526001600160a01b038516600482015260240161051c565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610f4557604051633250574960e11b81526001600160a01b038516600482015260240161051c565b505b5050505050565b60605f610f5a83611195565b60010190505f8167ffffffffffffffff811115610f7957610f7961154c565b6040519080825280601f01601f191660200182016040528015610fa3576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610fad57509392505050565b8080610fff57506001600160a01b03821615155b156110de575f61100e84610ba0565b90506001600160a01b0383161580159061103a5750826001600160a01b0316816001600160a01b031614155b801561106b57506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b156110945760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161051c565b81156110dc5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b611125838383611276565b61059f576001600160a01b03831661115357604051637e27328960e01b81526004810182905260240161051c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161051c565b61118883836112f9565b61059f335f858585610e26565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111dd577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611209576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061122757662386f26fc10000830492506010015b6305f5e100831061123f576305f5e100830492506008015b612710831061125357612710830492506004015b60648310611265576064830492506002015b600a831061042c5760010192915050565b5f6001600160a01b038316158015906112f15750826001600160a01b0316846001600160a01b031614806112ce57506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b806112f157505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b03821661132257604051633250574960e11b81525f600482015260240161051c565b5f61132e83835f610be5565b90506001600160a01b0381161561059f576040516339e3563760e11b81525f600482015260240161051c565b6001600160e01b031981168114610b9d575f5ffd5b5f6020828403121561137f575f5ffd5b813561138a8161135a565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61138a6020830184611391565b5f602082840312156113e1575f5ffd5b5035919050565b80356001600160a01b03811681146113fe575f5ffd5b919050565b5f5f60408385031215611414575f5ffd5b61141d836113e8565b946020939093013593505050565b5f5f5f6060848603121561143d575f5ffd5b611446846113e8565b9250611454602085016113e8565b929592945050506040919091013590565b803560ff811681146113fe575f5ffd5b5f60208284031215611485575f5ffd5b61138a82611465565b63ffffffff81168114610b9d575f5ffd5b5f5f604083850312156114b0575f5ffd5b6114b983611465565b915060208301356114c98161148e565b809150509250929050565b5f602082840312156114e4575f5ffd5b61138a826113e8565b5f5f604083850312156114fe575f5ffd5b611507836113e8565b915061151560208401611465565b90509250929050565b5f5f6040838503121561152f575f5ffd5b611538836113e8565b9150602083013580151581146114c9575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f60808587031215611573575f5ffd5b61157c856113e8565b935061158a602086016113e8565b925060408501359150606085013567ffffffffffffffff8111156115ac575f5ffd5b8501601f810187136115bc575f5ffd5b803567ffffffffffffffff8111156115d6576115d661154c565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156116055761160561154c565b60405281815282820160200189101561161c575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f5f5f6040848603121561164f575f5ffd5b61165884611465565b9250602084013567ffffffffffffffff811115611673575f5ffd5b8401601f81018613611683575f5ffd5b803567ffffffffffffffff811115611699575f5ffd5b8660208284010111156116aa575f5ffd5b939660209190910195509293505050565b5f5f604083850312156116cc575f5ffd5b6116d5836113e8565b9150611515602084016113e8565b600181811c908216806116f757607f821691505b60208210810361171557634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6020828403121561172b575f5ffd5b815161138a8161148e565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161175b5761175b611736565b5060010190565b5f81518060208401855e5f93019283525090919050565b5f6112f16117878386611762565b84611762565b5f60ff821660ff81036117a2576117a2611736565b60010192915050565b601f82111561059f57805f5260205f20601f840160051c810160208510156117d05750805b601f840160051c820191505b81811015610f47575f81556001016117dc565b67ffffffffffffffff8311156118075761180761154c565b61181b8361181583546116e3565b836117ab565b5f601f84116001811461184c575f85156118355750838201355b5f19600387901b1c1916600186901b178355610f47565b5f83815260208120601f198716915b8281101561187b578685013582556020948501946001909201910161185b565b5086821015611897575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f6118df6080830184611391565b9695505050505050565b5f602082840312156118f9575f5ffd5b815161138a8161135a56fea164736f6c634300081b000a";

type SaveWaterBadgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaveWaterBadgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaveWaterBadge__factory extends ContractFactory {
  constructor(...args: SaveWaterBadgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    saveWaterAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(saveWaterAddress, overrides || {});
  }
  override deploy(
    saveWaterAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(saveWaterAddress, overrides || {}) as Promise<
      SaveWaterBadge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SaveWaterBadge__factory {
    return super.connect(runner) as SaveWaterBadge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaveWaterBadgeInterface {
    return new Interface(_abi) as SaveWaterBadgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SaveWaterBadge {
    return new Contract(address, _abi, runner) as unknown as SaveWaterBadge;
  }
}
